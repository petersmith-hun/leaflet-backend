version: 2.1

orbs:
  jira: circleci/jira@1.1.2

# Common parameters for CircleCI build config
parameters:
  app_name:
    type: string
    default: "leaflet"
  jenkins_build_offset:
    type: integer
    default: 67
  auto_deploy:
    type: boolean
    default: true
  auto_start:
    type: boolean
    default: true

# Reusable commands
commands:

  # Command definition for publishing GitHub releases/tags
  github_release:
    parameters:
      release-type:
        type: enum
        default: "rc"
        enum: ["rc", "release"]
    steps:
      - attach_workspace:
          at: /tmp/ws_store
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION=v$(cat /tmp/ws_store/version)-<< parameters.release-type >>
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} /tmp/ws_store/leaflet-backend-exec.jar

jobs:

  # Leaflet Backend - Build and test application
  build:
    docker:
      - image: cimg/openjdk:11.0.6
    steps:
      - checkout
      - run:
          command: echo 'export BUILD_NUMBER="$((<< pipeline.number >> + << pipeline.parameters.jenkins_build_offset >>))"' >> $BASH_ENV
          name: Set build version
      - run:
          command: mvn build-helper:parse-version versions:set -DnewVersion="\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.incrementalVersion}.${BUILD_NUMBER}"
          name: Set project version
      - run:
          command: echo 'export PROJECT_VERSION=`mvn help:evaluate -Dexpression=project.version -q -DforceStdout --non-recursive`' >> $BASH_ENV
          name: Extract project version
      - run:
          command: mvn clean install -s .circleci/settings.xml
          name: Build
      - run:
          command: mvn -Duser.timezone=Europe/Budapest -pl acceptance-tests -Pacceptance verify -s .circleci/settings.xml
          name: Run Acceptance Tests
      - run:
          command: |
            mkdir -p /tmp/ws_store
            cp ./web/target/leaflet-backend-exec.jar /tmp/ws_store/leaflet-backend-exec.jar
            echo $PROJECT_VERSION >> /tmp/ws_store/version
          name: Prepare workspace shared storage
      - persist_to_workspace:
          root: /tmp/ws_store
          paths:
            - leaflet-backend-exec.jar
            - version
      - store_artifacts:
          path: web/target/leaflet-backend-exec.jar
      - store_test_results:
          path: web/target/surefire-reports
      - store_test_results:
          path: service/target/surefire-reports
      - store_test_results:
          path: service/target/failsafe-reports
      - store_test_results:
          path: acceptance-tests/target/failsafe-reports

  # Leaflet Backend - Deploy to production
  deploy:
    docker:
      - image: cimg/openjdk:11.0.6
    steps:
      - attach_workspace:
          at: /tmp/ws_store
      - run:
          command: echo 'export BUILD_NUMBER="$((<< pipeline.number >> + << pipeline.parameters.jenkins_build_offset >>))"' >> $BASH_ENV
          name: Set build version
      - run:
          command: |
            domino_response=$(curl \
                 -s -w "%{http_code}" \
                 --header "Authorization: Bearer ${LEAFLET_CI_DOMINO_AUTH_TOKEN}" \
                 -F 'executable=@/tmp/ws_store/leaflet-backend-exec.jar' \
                 ${LEAFLET_CI_DOMINO_HOST}/upload/<< pipeline.parameters.app_name >>/${PROJECT_VERSION}?autodeploy=<< pipeline.parameters.auto_deploy >>&autostart=<< pipeline.parameters.auto_start >>)

            case $domino_response in \
              201 | 202) \
                exit 0 \
                ;; \
              *) \
                echo "Domino returned with status code $domino_response" \
                exit 1 \
                ;; \
            esac

          name: Send executable to Domino

  # Leaflet Backend - Publish tag (and release) on GitHub for RC versions
  publish-github-rc:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - github_release:
          release-type: rc

  # Leaflet Backend - Publish tag (and release) on GitHub for RELEASE versions
  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - github_release:
          release-type: release

workflows:
  leaflet-backend:
    jobs:

      - build:
         context: leaflet_ci
         filters:
          branches:
            only:
               - master
         post-steps:
           - jira/notify:
               environment_type: development
               job_type: build

      - publish-github-rc:
          context: leaflet_ci
          requires:
            - build

      - deploy-approval:
          context: leaflet_ci
          type: approval
          requires:
            - publish-github-rc

      - deploy:
          context: leaflet_ci
          requires:
            - deploy-approval
          post-steps:
            - jira/notify:
                environment_type: production
                job_type: deployment

      - publish-github-release:
          context: leaflet_ci
          requires:
            - deploy

  version: 2.1
